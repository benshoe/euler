package org.schoen.ben.euler;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * @author <a href="mailto:benshoe@gmail.com">Ben Schoen</a>
 * @since Oct 3, 2014
 */
public class Opdracht2 implements IEulerProblem {

	private String m_answer;

	@Override
	public void run() {
		int max = 4000000;
		long first = 1;
		long second = 1;
		long sum = 0;
		System.out.print(first + " " + second + " ");
		for(long fibonacci = 0; fibonacci <= max;) {
			fibonacci = first + second;
			first = second;
			second = fibonacci;
			System.out.print(fibonacci + " ");
			if(fibonacci % 2 == 0) {
				sum += fibonacci;
			}
		}
		System.out.println("The sum is: " + sum);
		m_answer = String.valueOf(sum);
	}

	@Override
	public String getProblemName() {
		return "Problem 2: sum of even-valued terms in Fibonacci sequence until 4,000,000";
	}

	@Override
	public boolean isCorrectAnswer() {
		return "4613732".equals(m_answer);
	}

}
